# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import shipping_pb2 as shipping__pb2


class ShippingServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ServiceStatus = channel.unary_unary(
            "/ShippingService/ServiceStatus",
            request_serializer=shipping__pb2.ServiceStatusRequest.SerializeToString,
            response_deserializer=shipping__pb2.ServiceStatusReply.FromString,
        )
        self.ShippingOrder = channel.unary_unary(
            "/ShippingService/ShippingOrder",
            request_serializer=shipping__pb2.ShippingOrderRequest.SerializeToString,
            response_deserializer=shipping__pb2.ShippingOrderReply.FromString,
        )
        self.FindShipping = channel.unary_unary(
            "/ShippingService/FindShipping",
            request_serializer=shipping__pb2.FindShippingRequest.SerializeToString,
            response_deserializer=shipping__pb2.FindShippingReply.FromString,
        )
        self.GetAllShipping = channel.unary_unary(
            "/ShippingService/GetAllShipping",
            request_serializer=shipping__pb2.GetAllShippingRequest.SerializeToString,
            response_deserializer=shipping__pb2.GetAllShippingReply.FromString,
        )


class ShippingServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ServiceStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def ShippingOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def FindShipping(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")

    def GetAllShipping(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details("Method not implemented!")
        raise NotImplementedError("Method not implemented!")


def add_ShippingServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
        "ServiceStatus": grpc.unary_unary_rpc_method_handler(
            servicer.ServiceStatus,
            request_deserializer=shipping__pb2.ServiceStatusRequest.FromString,
            response_serializer=shipping__pb2.ServiceStatusReply.SerializeToString,
        ),
        "ShippingOrder": grpc.unary_unary_rpc_method_handler(
            servicer.ShippingOrder,
            request_deserializer=shipping__pb2.ShippingOrderRequest.FromString,
            response_serializer=shipping__pb2.ShippingOrderReply.SerializeToString,
        ),
        "FindShipping": grpc.unary_unary_rpc_method_handler(
            servicer.FindShipping,
            request_deserializer=shipping__pb2.FindShippingRequest.FromString,
            response_serializer=shipping__pb2.FindShippingReply.SerializeToString,
        ),
        "GetAllShipping": grpc.unary_unary_rpc_method_handler(
            servicer.GetAllShipping,
            request_deserializer=shipping__pb2.GetAllShippingRequest.FromString,
            response_serializer=shipping__pb2.GetAllShippingReply.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        "ShippingService", rpc_method_handlers
    )
    server.add_generic_rpc_handlers((generic_handler,))


# This class is part of an EXPERIMENTAL API.
class ShippingService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ServiceStatus(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/ShippingService/ServiceStatus",
            shipping__pb2.ServiceStatusRequest.SerializeToString,
            shipping__pb2.ServiceStatusReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def ShippingOrder(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/ShippingService/ShippingOrder",
            shipping__pb2.ShippingOrderRequest.SerializeToString,
            shipping__pb2.ShippingOrderReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def FindShipping(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/ShippingService/FindShipping",
            shipping__pb2.FindShippingRequest.SerializeToString,
            shipping__pb2.FindShippingReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )

    @staticmethod
    def GetAllShipping(
        request,
        target,
        options=(),
        channel_credentials=None,
        call_credentials=None,
        insecure=False,
        compression=None,
        wait_for_ready=None,
        timeout=None,
        metadata=None,
    ):
        return grpc.experimental.unary_unary(
            request,
            target,
            "/ShippingService/GetAllShipping",
            shipping__pb2.GetAllShippingRequest.SerializeToString,
            shipping__pb2.GetAllShippingReply.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
        )
